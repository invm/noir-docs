"use strict";(self.webpackChunknoir_github_io=self.webpackChunknoir_github_io||[]).push([[472],{2453:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var i=n(3010),s=n(6274);const o={sidebar_position:3,description:"SSL Support"},r="\ud83d\udd12 SSL Support",c={id:"using-the-app/ssl-support",title:"\ud83d\udd12 SSL Support",description:"SSL Support",source:"@site/docs/using-the-app/ssl-support.md",sourceDirName:"using-the-app",slug:"/using-the-app/ssl-support",permalink:"/noir-docs/using-the-app/ssl-support",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,description:"SSL Support"},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udda5\ufe0f Console overview",permalink:"/noir-docs/using-the-app/console-overview"},next:{title:"\u2328\ufe0f Keyboard shortcuts",permalink:"/noir-docs/using-the-app/keyboard-shortcuts"}},a={},l=[{value:"SSL modes",id:"ssl-modes",level:2},{value:"Certificates",id:"certificates",level:2},{value:"Postgresql",id:"postgresql",level:3},{value:"Mysql",id:"mysql",level:3}];function d(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"-ssl-support",children:"\ud83d\udd12 SSL Support"}),"\n",(0,i.jsx)(t.p,{children:"Noir has the ability to encrypt the db connection and transfer the data in an encrypted manner"}),"\n",(0,i.jsx)(t.admonition,{type:"tip",children:(0,i.jsxs)(t.p,{children:["By default, Noir will prefer to establish a secure connection and will trust the server certificate, if you do not want that behavior for some reason, select ",(0,i.jsx)(t.code,{children:"disable"})," ssl mode when creating a new connection."]})}),"\n",(0,i.jsx)(t.h2,{id:"ssl-modes",children:"SSL modes"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"Disable"})," - connection will be established without tls.\n",(0,i.jsx)(t.code,{children:"Prefer"})," - if the server does not support tls, the connection will continue without tls.\n",(0,i.jsx)(t.code,{children:"Require"})," - requires the server to provide a valid ssl certificate."]}),"\n",(0,i.jsx)(t.h2,{id:"certificates",children:"Certificates"}),"\n",(0,i.jsx)(t.p,{children:"Providing certificates automatically attaches them when connecting to a database."}),"\n",(0,i.jsx)(t.h3,{id:"postgresql",children:"Postgresql"}),"\n",(0,i.jsx)(t.p,{children:"Connecting to Postgresql is available with CA root certificate, client certificate and client key"}),"\n",(0,i.jsx)(t.h3,{id:"mysql",children:"Mysql"}),"\n",(0,i.jsx)(t.p,{children:"Connecting to Mysql is available with CA root certificate and client p12 certificate."}),"\n",(0,i.jsx)(t.p,{children:"Convert a client cert and key to p12 with:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"openssl pkcs12 -export -legacy -in client.pem -inkey client.key -out client.p12\n"})})]})}function p(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},6274:(e,t,n)=>{n.d(t,{Z:()=>c,a:()=>r});var i=n(5170);const s={},o=i.createContext(s);function r(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);